{"version":3,"sources":["webpack://CustomPlugin/webpack/universalModuleDefinition","webpack://CustomPlugin/webpack/bootstrap","webpack://CustomPlugin/./main.js"],"names":["CustomPlugin","scene","pluginManager","counter","countDelay","nextCount","textObject","active","eventEmitter","systems","events","on","update","text","add","fontFamily","fontSize","color","time","delta","setText","shutdown","undefined","delay","Phaser","Plugins","ScenePlugin"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;ICnEqBA,Y;;;AACjB,0BAAYC,KAAZ,EAAmBC,aAAnB,EAAkC;AAAA;;AAAA,gIACxBD,KADwB,EACjBC,aADiB;;AAE9B,cAAKD,KAAL,GAAaA,KAAb;AACA,cAAKE,OAAL,GAAe,CAAf;AACA,cAAKC,UAAL,GAAkB,GAAlB;AACA,cAAKC,SAAL,GAAiB,CAAjB;AACA,cAAKC,UAAL,GAAkB,IAAlB;AACA,cAAKC,MAAL,GAAc,IAAd;AAP8B;AAQjC;;AAED;AACA;;;;;+BACO;AACH,gBAAIC,eAAe,KAAKC,OAAL,CAAaC,MAAhC;AACAF,yBAAaG,EAAb,CAAgB,QAAhB,EAA0B,KAAKC,MAA/B,EAAuC,IAAvC;AACA,iBAAKC,IAAL,GAAY,KAAKZ,KAAL,CAAWa,GAAX,CAAeD,IAAf,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,QAA9B,EAAwC;AAChDE,4BAAY,OADoC;AAEhDC,0BAAU,EAFsC;AAGhDC,uBAAO;AAHyC,aAAxC,CAAZ;;AAMA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACH;;AAED;;;;gCACQ,CAAE;;AAEV;;;;kCACUC,I,EAAMC,K,EAAO,CAAE;;AAEzB;;;;+BACOD,I,EAAMC,K,EAAO;AAChB,gBAAI,CAAC,KAAKZ,MAAV,EAAkB;AACd;AACH;AACD,gBAAI,CAAC,KAAKF,SAAL,IAAkBc,KAAnB,IAA4B,CAAhC,EAAmC;AAC/B,oBAAI,EAAE,KAAKhB,OAAP,GAAiB,EAArB,EAAyB;AACrB,yBAAKA,OAAL,GAAe,CAAf;AACH;AACD,qBAAKU,IAAL,CAAUO,OAAV,CAAkB,KAAKjB,OAAvB;AACA,qBAAKE,SAAL,GAAiB,KAAKD,UAAtB;AACH;AACJ;;AAED;;;;mCACWc,I,EAAMC,K,EAAO,CAAE;;AAE1B;;;;gCACQ,CAAE;;AAEV;;;;iCACS,CAAE;;AAEX;;;;gCACQ,CAAE;;AAEV;;;;+BACO,CAAE;;AAET;;;;mCACW,CAAE;;AAEb;;;;kCACU;AACN,iBAAKE,QAAL;AACA,iBAAKpB,KAAL,GAAaqB,SAAb;AACH;;AAED;;;;iCACSC,K,EAAO;AACZ,iBAAKnB,UAAL,GAAkBmB,KAAlB;AACH;;AAED;;;;gCACQ;AACJ,iBAAKpB,OAAL,GAAe,CAAf;AACA,iBAAKU,IAAL,CAAUO,OAAV,CAAkB,CAAlB;AACH;;;;EA9FqCI,OAAOC,OAAP,CAAeC,W;;kBAApC1B,Y","file":"CustomPlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CustomPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CustomPlugin\"] = factory();\n\telse\n\t\troot[\"CustomPlugin\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class CustomPlugin extends Phaser.Plugins.ScenePlugin {\n    constructor(scene, pluginManager) {\n        super(scene, pluginManager);\n        this.scene = scene;\n        this.counter = 0;\n        this.countDelay = 300;\n        this.nextCount = 0;\n        this.textObject = null;\n        this.active = true;\n    }\n\n    //  Called when the Plugin is booted by the PluginManager.\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\n    boot() {\n        let eventEmitter = this.systems.events;\n        eventEmitter.on('update', this.update, this);\n        this.text = this.scene.add.text(100, 200, 'Phaser', {\n            fontFamily: 'Arial',\n            fontSize: 64,\n            color: '#00ff00'\n        });\n\n        /* \n            List of unused eventEmitters to activate matching methods of this plugin\n        */\n\n        //eventEmitter.on('start', this.start, this);\n\n        //eventEmitter.on('preupdate', this.preUpdate, this);\n        //eventEmitter.on('postupdate', this.postUpdate, this);\n\n        //eventEmitter.on('pause', this.pause, this);\n        //eventEmitter.on('resume', this.resume, this);\n\n        //eventEmitter.on('sleep', this.sleep, this);\n        //eventEmitter.on('wake', this.wake, this);\n\n        //eventEmitter.on('shutdown', this.shutdown, this);\n        //eventEmitter.on('destroy', this.destroy, this);*/\n    }\n\n    //  Called when a Scene is started by the SceneManager. The Scene is now active, visible and running.\n    start() {}\n\n    //  Called every Scene step - phase 1\n    preUpdate(time, delta) {}\n\n    //  Called every Scene step - phase 2\n    update(time, delta) {\n        if (!this.active) {\n            return;\n        }\n        if ((this.nextCount -= delta) < 0) {\n            if (++this.counter > 99) {\n                this.counter = 0;\n            }\n            this.text.setText(this.counter);\n            this.nextCount = this.countDelay;\n        }\n    }\n\n    //  Called every Scene step - phase 3\n    postUpdate(time, delta) {}\n\n    //  Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\n    pause() {}\n\n    //  Called when a Scene is resumed from a paused state.\n    resume() {}\n\n    //  Called when a Scene is put to sleep. A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\n    sleep() {}\n\n    //  Called when a Scene is woken from a sleeping state.\n    wake() {}\n\n    //  Called when a Scene shuts down, it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\n    shutdown() {}\n\n    //  Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\n    destroy() {\n        this.shutdown();\n        this.scene = undefined;\n    }\n\n    //  Custom method for this plugin\n    setDelay(delay) {\n        this.countDelay = delay;\n    }\n\n    //  Custom method for this plugin\n    reset() {\n        this.counter = 0;\n        this.text.setText(0);\n    }\n}"],"sourceRoot":""}